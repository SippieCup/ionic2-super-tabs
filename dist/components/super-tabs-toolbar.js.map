{"version":3,"file":"super-tabs-toolbar.js","sourceRoot":"","sources":["../../src/components/super-tabs-toolbar.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component, Input, Output, EventEmitter, ElementRef, ViewChildren, QueryList,\n  ViewEncapsulation, ViewChild, Renderer2, AfterViewInit, OnDestroy\n} from '@angular/core';\nimport { Platform, DomController } from 'ionic-angular';\nimport { SuperTabsPanGesture } from '../super-tabs-pan-gesture';\nimport { SuperTabsConfig } from './super-tabs';\nimport { SuperTabButton } from \"./super-tab-button\";\n\n@Component({\n  selector: 'super-tabs-toolbar',\n  template: `\n    <ion-toolbar [color]=\"color\" mode=\"md\" [class.scroll-tabs]=\"scrollTabs\">\n      <div class=\"tab-buttons-container\" #tabButtonsContainer>\n        <div *ngIf=\"tabsPlacement === 'bottom'\" class=\"indicator {{ 'button-md-' + indicatorColor }}\" #indicator></div>\n        <div class=\"tab-buttons\" #tabButtons>\n          <super-tab-button *ngFor=\"let tab of tabs; let i = index\" (select)=\"onTabSelect(i)\" [title]=\"tab.title\" [icon]=\"tab.icon\" [badge]=\"tab.badge\" [selected]=\"selectedTab === i\" [color]=\"tabsColor\" [badgeColor]=\"badgeColor\"></super-tab-button>\n        </div>\n        <div *ngIf=\"tabsPlacement === 'top'\" class=\"indicator {{ 'button-md-' + indicatorColor }}\" #indicator></div>\n      </div>\n    </ion-toolbar>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SuperTabsToolbar implements AfterViewInit, OnDestroy {\n\n  @Input()\n  color: string = '';\n\n  @Input()\n  tabsColor: string = '';\n\n  @Input()\n  badgeColor: string = '';\n\n  @Input()\n  scrollTabs: boolean = false;\n\n  @Input()\n  indicatorColor: string = '';\n\n  @Input()\n  selectedTab: number = 0;\n\n  @Input()\n  config: SuperTabsConfig;\n\n  @Input()\n  tabsPlacement: string;\n\n  indicatorPosition: number = 0;\n\n  indicatorWidth: number = 0;\n\n  @Output()\n  tabSelect: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChildren(SuperTabButton)\n  private tabButtons: QueryList<SuperTabButton>;\n\n  @ViewChild('tabButtonsContainer')\n  private tabButtonsContainer: ElementRef;\n\n  @ViewChild('indicator')\n  private indicator: ElementRef;\n\n  @ViewChild('tabButtons')\n  private tabButtonsBar: ElementRef;\n\n  /**\n   * @private\n   */\n  segmentPosition: number = 0;\n\n  /**\n   * The width of each button\n   */\n  segmentButtonWidths: number[] = [];\n\n  /**\n   * The segment width\n   */\n  segmentWidth: number = 0;\n\n  tabs: any[] = [];\n\n  private gesture: SuperTabsPanGesture;\n\n  private animationState = {\n    indicator: false,\n    segment: false\n  };\n\n  constructor(\n    private el: ElementRef,\n    private plt: Platform,\n    private rnd: Renderer2,\n    private domCtrl: DomController\n  ) {}\n\n  ngAfterViewInit() {\n    this.gesture = new SuperTabsPanGesture(this.plt, this.tabButtonsContainer.nativeElement, this.config, this.rnd);\n    this.gesture.onMove = (delta: number) => {\n\n      let newCPos = this.segmentPosition + delta;\n\n      let mw: number = this.el.nativeElement.offsetWidth,\n        cw: number = this.segmentWidth;\n\n      newCPos = Math.max(0, Math.min(newCPos, cw - mw));\n      this.setSegmentPosition(newCPos);\n\n    };\n\n    if (this.scrollTabs) {\n      this.plt.timeout(() => {\n        this.indexSegmentButtonWidths();\n      }, 10);\n    }\n  }\n\n  ngOnDestroy() {\n    this.gesture && this.gesture.destroy();\n  }\n\n  onTabSelect(index: number) {\n    this.tabSelect.emit(index);\n  }\n\n  alignIndicator(position: number, width: number, animate?: boolean) {\n    this.setIndicatorProperties(width, position, animate);\n  }\n\n  setIndicatorPosition(position: number, animate?: boolean) {\n    this.setIndicatorProperties(this.indicatorWidth, position, animate);\n  }\n\n  setIndicatorWidth(width: number, animate?: boolean) {\n    this.setIndicatorProperties(width, this.indicatorPosition, animate);\n  }\n\n  setIndicatorProperties(width: number, position: number, animate?: boolean) {\n    this.indicatorWidth = width;\n    this.indicatorPosition = position;\n    const scale = width / 100;\n    this.toggleAnimation('indicator', animate);\n    this.rnd.setStyle(this.indicator.nativeElement, this.plt.Css.transform,  'translate3d(' + (position - this.segmentPosition) + 'px, 0, 0) scale3d(' + scale + ', 1, 1)')\n  }\n\n  setSegmentPosition(position: number, animate?: boolean) {\n    this.segmentPosition = position;\n    this.toggleAnimation('segment', animate);\n    this.rnd.setStyle(this.tabButtonsBar.nativeElement, this.plt.Css.transform, `translate3d(${-1 * position}px,0,0)`);\n    this.setIndicatorPosition(this.indicatorPosition, animate);\n  }\n\n\n  /**\n   * Enables/disables animation\n   * @param el\n   * @param animate\n   */\n  private toggleAnimation(el: 'indicator' | 'segment', animate: boolean) {\n\n    if (!this.config || this.config.transitionDuration === 0)\n      return;\n\n    // only change style if the value changed\n    if (this.animationState[el] === animate) return;\n\n    this.animationState[el] = animate;\n\n    const _el: HTMLElement = el === 'indicator'? this.indicator.nativeElement : this.tabButtonsBar.nativeElement;\n    const value: string = animate? `all ${this.config.transitionDuration}ms ${this.config.transitionEase}` : 'initial';\n\n    this.rnd.setStyle(_el, this.plt.Css.transition, value);\n\n  }\n\n  /**\n   * Indexes the segment button widths\n   */\n  indexSegmentButtonWidths() {\n    let index = [], total = 0;\n\n    this.tabButtons.forEach((btn: SuperTabButton, i: number) => {\n      index[i] = btn.getNativeElement().offsetWidth;\n      total += index[i];\n    });\n\n    this.segmentButtonWidths = index;\n    this.segmentWidth = total;\n  }\n\n}\n"]}